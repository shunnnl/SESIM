pipeline {
  agent any

  environment {
    DEPLOY_KEY = '/var/jenkins_home/.ssh/sesim-saas-key-pair.pem'
    FE_SERVER_1 = '43.201.252.136'
    FE_SERVER_2 = '13.124.60.56'
    DEPLOY_PATH = '/home/ubuntu/sesim'
    FE_PROJECT_DIR = 'fe/sesim'
    FE_PROJECT_DIR_PATH = '/var/jenkins_home/workspace/sesim-frontend-deploy/fe/sesim'
  }

  options {
    skipDefaultCheckout true
  }

  stages {
    stage('Clone FE Branch') {
      steps {
        git branch: 'fe',
            url: 'https://lab.ssafy.com/s12-final/S12P31S109.git',
            credentialsId: 'sesim-gitlab'
      }
    }

    stage('Install & Build in fe/sesim') {
      steps {
        dir("${FE_PROJECT_DIR}") {
          sh '''
            rm -rf dist

            npm install

            npm run build
          '''
        }
      }
    }

    stage('Deploy to Frontend Servers') {
      steps {
        sh '''
          scp -i ${DEPLOY_KEY} -o StrictHostKeyChecking=no -r ${FE_PROJECT_DIR_PATH}/dist/* ubuntu@${FE_SERVER_1}:${DEPLOY_PATH}/dist

          scp -i ${DEPLOY_KEY} -o StrictHostKeyChecking=no -r ${FE_PROJECT_DIR_PATH}/dist/* ubuntu@${FE_SERVER_2}:${DEPLOY_PATH}/dist

          echo "✅ 프론트 배포 완료!"
        '''
      }
    }
  }

  post {
    success {
      script {
        def author = sh(script: "git log -1 --pretty=format:'%an'", returnStdout: true).trim()

        sh """
        curl -X POST -H 'Content-Type: application/json' \\
        -d '{
            "username": "세심 Jenkins 봇",
            "icon_emoji": ":jenkins7:",
            "attachments": [{
                "fallback": "프론트엔드 배포 성공!",
                "color": "#00C851",
                "title": ":jenkins7: 프론트엔드 배포 성공이 세심을 기쁘게 합니다.",
                "text": "• **🧑🏻‍💻작성자**: ${author}\n• **📦 서버**: ${env.FE_SERVER_1}, ${env.FE_SERVER_2}\n• **🛠️ 빌드 번호**: #${env.BUILD_NUMBER}\n• 🔗 [Jenkins 보러가기](${env.BUILD_URL})"
            }]
        }' https://meeting.ssafy.com/hooks/1wgxo7nc9td3zeedzh49yc61or
        """
      }
    }

    failure {
      script {
        def author = sh(script: "git log -1 --pretty=format:'%an'", returnStdout: true).trim()
        def reason = currentBuild.getLog(10).collect { it.replaceAll('"', '\\"') }.join("\\n")

        sh """
        curl -X POST -H 'Content-Type: application/json' \\
        -d '{
            "username": "세심 Jenkins 봇",
            "icon_emoji": ":jenkins7:",
            "attachments": [
                {
                "fallback": ":jenkins7: 프론트엔드 배포 실패!",
                "color": "#ff4444",
                "title": "🔥 긴급속보: 프론트엔드 배포에 실패했습니다.",
                "text": "• **🧑🏻‍💻작성자**: ${author} \n• **💥 빌드 번호**: #${env.BUILD_NUMBER}\n• **🧪 로그 요약**: ${reason}\n• 🔧 [Jenkins로 디버깅](${env.BUILD_URL})\n\n> 누군가... Jenkins를... 말려줘... 😱"
                }
            ]
        }' https://meeting.ssafy.com/hooks/1wgxo7nc9td3zeedzh49yc61or
        """
      }
    }
  }
}
